<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">


    <ResourceDictionary.MergedDictionaries>
        <!--- Styles -->
        <ResourceDictionary Source="Colours.xaml"/>
        <ResourceDictionary Source="Fonts.xaml"/>
    </ResourceDictionary.MergedDictionaries>



    <!-- Window Control Buttons -->
    <Style TargetType="{x:Type Button}" x:Key="WindowControlButton" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Padding" Value="10 0"/>
        <Setter Property="Foreground" Value="{StaticResource MyWhiteBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>

        <Setter Property="LayoutTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="1.5"/>
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}" x:Name="Border" BorderThickness="1">
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="{StaticResource WindowButtonBorderBrush}" TargetName="Border" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource ItemHoverBrush}"></Setter>
            </Trigger>
        </Style.Triggers>

    </Style>

    <!-- Window Close Button -->
    <Style  TargetType="{x:Type Button}" x:Key="WindowCloseButton" BasedOn="{StaticResource WindowControlButton}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource CloseWindowRedBrush}"/>
                <Setter Property="Foreground" Value="{StaticResource MyWhiteBrush}"/>
            </Trigger>
        </Style.Triggers>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}" x:Name="Border" BorderThickness="1">
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="Red" TargetName="Border" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Add new Button -->
    <Style TargetType="{x:Type Button}" x:Key="AddNewButton">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Ellipse Width="40" Height="40" Margin="{TemplateBinding Margin}">
                            <Ellipse.Fill>
                                <SolidColorBrush Color="Gray"/>
                            </Ellipse.Fill>
                        </Ellipse>

                        <TextBlock Text="+" FontSize="20" HorizontalAlignment="Center" VerticalAlignment="Center"></TextBlock>


                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="AddInPopup">
        <Setter Property="Background" Value="{StaticResource AccentBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="White"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}" CornerRadius="5">

                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="Gray"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>



    <!-- Add full button -->
    <Style TargetType="{x:Type Button}" x:Key="AddFull">

        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="{StaticResource AddFilledColourBrush}"/>



        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">



                    <ContentPresenter Width="{TemplateBinding Width}" VerticalAlignment="Center" HorizontalAlignment="Center" x:Name="Content" />


                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Content"
                                             Storyboard.TargetProperty="Width"
                                              To="42" Duration="0:0:0:0.07"
                                              />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>

                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Content"
                                             Storyboard.TargetProperty="Width"
                                              To="40" Duration="0:0:0:0.03"
                                              />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>


                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>


    </Style>

    <!-- The render button -->
    <Style TargetType="{x:Type Button}" x:Key="RenderButton">
        <Setter Property="Background" Value="{StaticResource Render}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="White"/>

        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Padding="10">
                        <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}" CornerRadius="5">

                            <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>

                            <Border.Effect>
                                <DropShadowEffect ShadowDepth="0"
                                      Color="{StaticResource Accent1}"
                                      Opacity="1"
                                      BlurRadius="5"/>
                            </Border.Effect>
                        </Border>

                    </Border>


                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource Accent1Brush}"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>